name: Build and Push Vouch Proxy Docker Images

on:
  push:
    branches: 
      - 'main'
    paths:
      - 'vouch-proxy/**'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'
    paths:
      - 'vouch-proxy/**'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  IMAGE_NAME: vouch-proxy

jobs:
  get-vouch-versions:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.get-versions.outputs.versions }}
    steps:
      - name: Get vouch-proxy versions
        id: get-versions
        run: |
          # Get all tags from vouch-proxy repo, filter for version tags, and format as JSON array
          VERSIONS=$(curl -s "https://api.github.com/repos/vouch/vouch-proxy/tags" | \
            jq -r '.[].name' | \
            grep -E '^v[0-9]+\.[0-9]+\.[0-9]+' | \
            head -20 | \
            jq -R -s -c 'split("\n")[:-1]')
          echo "versions=$VERSIONS" >> $GITHUB_OUTPUT
          echo "Found versions: $VERSIONS"

  docker-build:
    needs: get-vouch-versions
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        vouch_version: ${{ fromJson(needs.get-vouch-versions.outputs.versions) }}
      fail-fast: false
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64,arm

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.vouch_version }}
            type=raw,value=latest,enable=${{ matrix.vouch_version == needs.get-vouch-versions.outputs.versions[0] }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: vouch-proxy
          file: vouch-proxy/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VOUCH_VERSION=${{ matrix.vouch_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Test build job for PRs - only build latest version for testing
  test-build:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64,arm

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test build (no push)
        uses: docker/build-push-action@v5
        with:
          context: vouch-proxy
          file: vouch-proxy/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: false
          tags: test-vouch-proxy:${{ github.sha }}
          build-args: |
            VOUCH_VERSION=latest
          cache-from: type=gha
          cache-to: type=gha,mode=max