stages:
  - build
  - release

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  IMAGE_NAME: "vouch-proxy"
  DOCKERFILE_PATH: "vouch-proxy/Dockerfile"

# Build and push Docker images
docker-build:
  stage: build
  image: docker:24-dind
  services:
    - docker:24-dind
  before_script:
    # Install buildx
    - docker buildx create --use --name multiarch --driver docker-container
    - docker buildx inspect --bootstrap
    # Login to DockerHub
    - echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  script:
    # Determine version tag
    - |
      if [[ "$CI_COMMIT_TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
        VERSION_TAG="$CI_COMMIT_TAG"
        VOUCH_VERSION="$CI_COMMIT_TAG"
      elif [ "$CI_COMMIT_REF_NAME" = "main" ]; then
        VERSION_TAG="latest"
        VOUCH_VERSION="latest"
      else
        VERSION_TAG="$CI_COMMIT_REF_SLUG"
        VOUCH_VERSION="latest"
      fi
    
    # Build and push multi-architecture image
    - |
      docker buildx build \
        --platform linux/amd64,linux/arm64,linux/arm/v7 \
        --build-arg VOUCH_VERSION="$VOUCH_VERSION" \
        --tag "$DOCKERHUB_USERNAME/$IMAGE_NAME:$VERSION_TAG" \
        --tag "$DOCKERHUB_USERNAME/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA" \
        --push \
        --file "$DOCKERFILE_PATH" \
        vouch-proxy/
    
    # If this is a version tag, also tag as latest
    - |
      if [[ "$CI_COMMIT_TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
        docker buildx build \
          --platform linux/amd64,linux/arm64,linux/arm/v7 \
          --build-arg VOUCH_VERSION="$VOUCH_VERSION" \
          --tag "$DOCKERHUB_USERNAME/$IMAGE_NAME:latest" \
          --push \
          --file "$DOCKERFILE_PATH" \
          vouch-proxy/
      fi
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+.*$/
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  tags:
    - docker

# Create GitLab release for version tags
create-release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Creating release for $CI_COMMIT_TAG"
  release:
    tag_name: $CI_COMMIT_TAG
    name: 'Release $CI_COMMIT_TAG'
    description: |
      ## Vouch Proxy Docker Image Release $CI_COMMIT_TAG
      
      This release provides multi-architecture Docker images for vouch-proxy.
      
      ### Supported Architectures
      - linux/amd64
      - linux/arm64
      - linux/arm/v7
      
      ### Docker Images
      - `$DOCKERHUB_USERNAME/$IMAGE_NAME:$CI_COMMIT_TAG`
      - `$DOCKERHUB_USERNAME/$IMAGE_NAME:latest` (for latest release)
      
      ### Usage
      ```bash
      docker run -p 9090:9090 $DOCKERHUB_USERNAME/$IMAGE_NAME:$CI_COMMIT_TAG
      ```
      
      Built from vouch-proxy version: $CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+.*$/

# Test build without pushing (for MRs and feature branches)
test-build:
  stage: build
  image: docker:24-dind
  services:
    - docker:24-dind
  before_script:
    - docker buildx create --use --name multiarch --driver docker-container
    - docker buildx inspect --bootstrap
  script:
    - |
      docker buildx build \
        --platform linux/amd64,linux/arm64,linux/arm/v7 \
        --build-arg VOUCH_VERSION="latest" \
        --tag "test-$IMAGE_NAME:$CI_COMMIT_SHORT_SHA" \
        --file "$DOCKERFILE_PATH" \
        vouch-proxy/
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH != "main" && $CI_COMMIT_TAG !~ /^v[0-9]+\.[0-9]+\.[0-9]+.*$/
  tags:
    - docker